import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function checkDatabaseRecords() {
  try {
    console.log('ЁЯФН р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Гр╕Щр╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Бр╕Ър╕Ър╕ер╕░р╣Ар╕нр╕╡р╕вр╕Ф')
    console.log('=' .repeat(80))

    // 1. р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ Users
    console.log('\nЁЯСд р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ Users:')
    const users = await prisma.user.findMany()
    console.log(`   р╕Ир╕│р╕Щр╕зр╕Щ Users: ${users.length}`)
    users.forEach((user, index) => {
      console.log(`   ${index + 1}. ${user.name} (${user.email}) - ${user.role}`)
    })

    // 2. р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ Customers
    console.log('\nЁЯСе р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ Customers:')
    const customers = await prisma.customer.findMany()
    console.log(`   р╕Ир╕│р╕Щр╕зр╕Щ Customers: ${customers.length}`)
    customers.forEach((customer, index) => {
      console.log(`   ${index + 1}. ${customer.name} (${customer.email})`)
      console.log(`      р╣Ар╕Ър╕нр╕гр╣Мр╣Вр╕Чр╕г: ${customer.phone}`)
      console.log(`      р╕Ър╕гр╕┤р╕йр╕▒р╕Ч: ${customer.company || 'р╣Др╕бр╣Ир╕бр╕╡'}`)
    })

    // 3. р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ Technicians
    console.log('\nЁЯФз р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ Technicians:')
    const technicians = await prisma.technician.findMany()
    console.log(`   р╕Ир╕│р╕Щр╕зр╕Щ Technicians: ${technicians.length}`)
    technicians.forEach((tech, index) => {
      console.log(`   ${index + 1}. ${tech.name} (${tech.email})`)
      console.log(`      р╣Ар╕Ър╕нр╕гр╣Мр╣Вр╕Чр╕г: ${tech.phone}`)
      console.log(`      р╕Др╕зр╕▓р╕бр╣Ар╕Кр╕╡р╣Ир╕вр╕зр╕Кр╕▓р╕Н: ${tech.speciality}`)
      console.log(`      р╕нр╕▒р╕Хр╕гр╕▓р╕Др╣Ир╕▓р╕Ир╣Йр╕▓р╕З: ${tech.hourlyRate} р╕Ър╕▓р╕Ч/р╕Кр╕▒р╣Ир╕зр╣Вр╕бр╕З`)
    })

    // 4. р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ MinerModels
    console.log('\nтЪЩя╕П р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ MinerModels:')
    const minerModels = await prisma.minerModel.findMany()
    console.log(`   р╕Ир╕│р╕Щр╕зр╕Щ MinerModels: ${minerModels.length}`)
    minerModels.forEach((model, index) => {
      console.log(`   ${index + 1}. ${model.brand} ${model.model}`)
      console.log(`      Series: ${model.series}`)
      console.log(`      Hash Rate: ${model.hashRate}`)
      console.log(`      Power: ${model.power}`)
    })

    // 5. р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ WorkOrders
    console.log('\nЁЯФз р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ WorkOrders:')
    const workOrders = await prisma.workOrder.findMany({
      include: {
        customer: true,
        technician: true,
        minerModel: true
      }
    })
    console.log(`   р╕Ир╕│р╕Щр╕зр╕Щ WorkOrders: ${workOrders.length}`)
    workOrders.forEach((wo, index) => {
      console.log(`   ${index + 1}. ${wo.orderNumber}`)
      console.log(`      р╕ер╕╣р╕Бр╕Др╣Йр╕▓: ${wo.customer.name}`)
      console.log(`      р╕Кр╣Ир╕▓р╕З: ${wo.technician?.name || 'р╕вр╕▒р╕Зр╣Др╕бр╣Ир╣Др╕Фр╣Йр╕бр╕нр╕Ър╕лр╕бр╕▓р╕в'}`)
      console.log(`      р╕гр╕╕р╣Ир╕Щр╣Ар╕Др╕гр╕╖р╣Ир╕нр╕З: ${wo.minerModel?.brand} ${wo.minerModel?.model || 'р╣Др╕бр╣Ир╕гр╕░р╕Ър╕╕'}`)
      console.log(`      р╕кр╕Цр╕▓р╕Щр╕░: ${wo.status}`)
      console.log(`      р╕Ыр╕▒р╕Нр╕лр╕▓: ${wo.issue}`)
    })

    // 6. р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ Invoices
    console.log('\nЁЯТ░ р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ Invoices:')
    const invoices = await prisma.invoice.findMany({
      include: {
        customer: true,
        workOrder: true,
        items: true,
        payments: true
      }
    })
    console.log(`   р╕Ир╕│р╕Щр╕зр╕Щ Invoices: ${invoices.length}`)
    invoices.forEach((invoice, index) => {
      console.log(`   ${index + 1}. ${invoice.invoiceNumber}`)
      console.log(`      р╕ер╕╣р╕Бр╕Др╣Йр╕▓: ${invoice.customer.name}`)
      console.log(`      Work Order: ${invoice.workOrder?.orderNumber || 'р╣Др╕бр╣Ир╕бр╕╡'}`)
      console.log(`      р╕кр╕Цр╕▓р╕Щр╕░: ${invoice.status}`)
      console.log(`      р╕вр╕нр╕Фр╕гр╕зр╕б: ${invoice.totalAmount} р╕Ър╕▓р╕Ч`)
      console.log(`      р╕Кр╕│р╕гр╕░р╣Бр╕ер╣Йр╕з: ${invoice.paidAmount} р╕Ър╕▓р╕Ч`)
      console.log(`      р╕Др╕Зр╣Ар╕лр╕ер╕╖р╕н: ${invoice.balanceAmount} р╕Ър╕▓р╕Ч`)
      console.log(`      р╕гр╕▓р╕вр╕Бр╕▓р╕г: ${invoice.items.length} р╕гр╕▓р╕вр╕Бр╕▓р╕г`)
      console.log(`      р╕Бр╕▓р╕гр╕Кр╕│р╕гр╕░: ${invoice.payments.length} р╕Др╕гр╕▒р╣Йр╕З`)
    })

    // 7. р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ InvoiceItems
    console.log('\nЁЯУЛ р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ InvoiceItems:')
    const invoiceItems = await prisma.invoiceItem.findMany()
    console.log(`   р╕Ир╕│р╕Щр╕зр╕Щ InvoiceItems: ${invoiceItems.length}`)
    invoiceItems.forEach((item, index) => {
      console.log(`   ${index + 1}. ${item.description}`)
      console.log(`      р╕Ир╕│р╕Щр╕зр╕Щ: ${item.quantity}`)
      console.log(`      р╕гр╕▓р╕Др╕▓р╕Хр╣Ир╕нр╕лр╕Щр╣Ир╕зр╕в: ${item.unitPrice} р╕Ър╕▓р╕Ч`)
      console.log(`      р╕вр╕нр╕Фр╕гр╕зр╕б: ${item.totalPrice} р╕Ър╕▓р╕Ч`)
      console.log(`      р╕Ыр╕гр╕░р╣Ар╕ар╕Ч: ${item.type}`)
    })

    // 8. р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ Payments
    console.log('\nЁЯТ│ р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ Payments:')
    const payments = await prisma.payment.findMany({
      include: {
        invoice: {
          include: {
            customer: true
          }
        }
      }
    })
    console.log(`   р╕Ир╕│р╕Щр╕зр╕Щ Payments: ${payments.length}`)
    payments.forEach((payment, index) => {
      console.log(`   ${index + 1}. ${payment.amount} р╕Ър╕▓р╕Ч`)
      console.log(`      р╕зр╕┤р╕Шр╕╡р╕Кр╕│р╕гр╕░: ${payment.paymentMethod}`)
      console.log(`      р╕зр╕▒р╕Щр╕Чр╕╡р╣И: ${payment.paymentDate.toLocaleDateString('th-TH')}`)
      console.log(`      р╣Гр╕Ър╣Бр╕Ир╣Йр╕Зр╕лр╕Щр╕╡р╣Й: ${payment.invoice.invoiceNumber}`)
      console.log(`      р╕ер╕╣р╕Бр╕Др╣Йр╕▓: ${payment.invoice.customer.name}`)
      console.log(`      р╕лр╕бр╕▓р╕вр╣Ар╕лр╕Хр╕╕: ${payment.notes || 'р╣Др╕бр╣Ир╕бр╕╡'}`)
    })

    // 9. р╕кр╕гр╕╕р╕Ыр╕кр╕Цр╕┤р╕Хр╕┤
    console.log('\nЁЯУК р╕кр╕гр╕╕р╕Ыр╕кр╕Цр╕┤р╕Хр╕┤р╕Вр╣Йр╕нр╕бр╕╣р╕е:')
    console.log(`   ЁЯСд Users: ${users.length} р╕Др╕Щ`)
    console.log(`   ЁЯСе Customers: ${customers.length} р╕гр╕▓р╕в`)
    console.log(`   ЁЯФз Technicians: ${technicians.length} р╕Др╕Щ`)
    console.log(`   тЪЩя╕П MinerModels: ${minerModels.length} р╕гр╕╕р╣Ир╕Щ`)
    console.log(`   ЁЯФз WorkOrders: ${workOrders.length} р╕гр╕▓р╕вр╕Бр╕▓р╕г`)
    console.log(`   ЁЯТ░ Invoices: ${invoices.length} р╣Гр╕Ъ`)
    console.log(`   ЁЯУЛ InvoiceItems: ${invoiceItems.length} р╕гр╕▓р╕вр╕Бр╕▓р╕г`)
    console.log(`   ЁЯТ│ Payments: ${payments.length} р╕Др╕гр╕▒р╣Йр╕З`)

    // 10. р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Др╕зр╕▓р╕бр╕кр╕▒р╕бр╕Юр╕▒р╕Щр╕Шр╣М
    console.log('\nЁЯФЧ р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Др╕зр╕▓р╕бр╕кр╕▒р╕бр╕Юр╕▒р╕Щр╕Шр╣М:')
    
    // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ WorkOrders р╕Чр╕╡р╣Ир╕бр╕╡ Customer
    const workOrdersWithCustomer = workOrders.filter(wo => wo.customer)
    console.log(`   WorkOrders р╕Чр╕╡р╣Ир╕бр╕╡ Customer: ${workOrdersWithCustomer.length}/${workOrders.length}`)
    
    // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ Invoices р╕Чр╕╡р╣Ир╕бр╕╡ Customer
    const invoicesWithCustomer = invoices.filter(inv => inv.customer)
    console.log(`   Invoices р╕Чр╕╡р╣Ир╕бр╕╡ Customer: ${invoicesWithCustomer.length}/${invoices.length}`)
    
    // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ Payments р╕Чр╕╡р╣Ир╕бр╕╡ Invoice
    const paymentsWithInvoice = payments.filter(pay => pay.invoice)
    console.log(`   Payments р╕Чр╕╡р╣Ир╕бр╕╡ Invoice: ${paymentsWithInvoice.length}/${payments.length}`)

    // 11. р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕╡р╣Ир╕Вр╕▓р╕Фр╕лр╕▓р╕вр╣Др╕Ы
    console.log('\nтЪая╕П  р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕╡р╣Ир╕Вр╕▓р╕Фр╕лр╕▓р╕вр╣Др╕Ы:')
    
    const workOrdersWithoutTechnician = workOrders.filter(wo => !wo.technician)
    if (workOrdersWithoutTechnician.length > 0) {
      console.log(`   WorkOrders р╕Чр╕╡р╣Ир╣Др╕бр╣Ир╕бр╕╡р╕Кр╣Ир╕▓р╕З: ${workOrdersWithoutTechnician.length} р╕гр╕▓р╕вр╕Бр╕▓р╕г`)
      workOrdersWithoutTechnician.forEach(wo => {
        console.log(`      - ${wo.orderNumber}`)
      })
    }
    
    const invoicesWithoutWorkOrder = invoices.filter(inv => !inv.workOrder)
    if (invoicesWithoutWorkOrder.length > 0) {
      console.log(`   Invoices р╕Чр╕╡р╣Ир╣Др╕бр╣Ир╕бр╕╡ WorkOrder: ${invoicesWithoutWorkOrder.length} р╣Гр╕Ъ`)
      invoicesWithoutWorkOrder.forEach(inv => {
        console.log(`      - ${inv.invoiceNumber}`)
      })
    }

    console.log('\nтЬЕ р╕Бр╕▓р╕гр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щ!')
    
    return {
      users: users.length,
      customers: customers.length,
      technicians: technicians.length,
      minerModels: minerModels.length,
      workOrders: workOrders.length,
      invoices: invoices.length,
      invoiceItems: invoiceItems.length,
      payments: payments.length
    }

  } catch (error) {
    console.error('тЭМ р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф:', error)
    throw error
  } finally {
    await prisma.$disconnect()
  }
}

// р╕гр╕▒р╕Щр╕Бр╕▓р╕гр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ
checkDatabaseRecords()
  .then((stats) => {
    console.log('\nЁЯУИ р╕кр╕гр╕╕р╕Ыр╕кр╕Цр╕┤р╕Хр╕┤:')
    console.log(`   ЁЯСд Users: ${stats.users} р╕Др╕Щ`)
    console.log(`   ЁЯСе Customers: ${stats.customers} р╕гр╕▓р╕в`)
    console.log(`   ЁЯФз Technicians: ${stats.technicians} р╕Др╕Щ`)
    console.log(`   тЪЩя╕П MinerModels: ${stats.minerModels} р╕гр╕╕р╣Ир╕Щ`)
    console.log(`   ЁЯФз WorkOrders: ${stats.workOrders} р╕гр╕▓р╕вр╕Бр╕▓р╕г`)
    console.log(`   ЁЯТ░ Invoices: ${stats.invoices} р╣Гр╕Ъ`)
    console.log(`   ЁЯУЛ InvoiceItems: ${stats.invoiceItems} р╕гр╕▓р╕вр╕Бр╕▓р╕г`)
    console.log(`   ЁЯТ│ Payments: ${stats.payments} р╕Др╕гр╕▒р╣Йр╕З`)
    console.log('\nЁЯОЙ р╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕бр╕╡р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Др╕гр╕Ър╕Цр╣Йр╕зр╕Щ!')
    process.exit(0)
  })
  .catch((error) => {
    console.error('тЭМ р╕Бр╕▓р╕гр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕ер╣Йр╕бр╣Ар╕лр╕ер╕з:', error)
    process.exit(1)
  })
